---
phrase_run:
  author: Angus Macgyver
  revision: ABCD1234
  repository: phrase
  result: >
    {
      "metadata": {
        "rubocop_version": "0.24.1",
        "ruby_engine": "ruby",
        "ruby_version": "2.1.3",
        "ruby_patchlevel": "242",
        "ruby_platform": "x86_64-darwin13.0"
      },
      "files": [
        {
          "path": "bin/phrase-droid",
          "offenses": [
            {
              "severity": "convention",
              "message": "Use snake_case for source file names.",
              "cop_name": "Style/FileName",
              "corrected": null,
              "location": {
                "line": 1,
                "column": 1,
                "length": 1
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `global_options`. If it's necessary, use `_` or `_global_options` as an argument name to indicate that it won't be used.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 15,
                "column": 16,
                "length": 14
              }
            },
            {
              "severity": "convention",
              "message": "Use the new Ruby 1.9 hash syntax.",
              "cop_name": "Style/HashSyntax",
              "corrected": null,
              "location": {
                "line": 18,
                "column": 23,
                "length": 14
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `global_options`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 28,
                "column": 16,
                "length": 14
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `options`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 28,
                "column": 32,
                "length": 7
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `args`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 28,
                "column": 41,
                "length": 4
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `global_options`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 36,
                "column": 16,
                "length": 14
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `options`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 36,
                "column": 32,
                "length": 7
              }
            },
            {
              "severity": "convention",
              "message": "Space found before comma.",
              "cop_name": "Style/SpaceBeforeComma",
              "corrected": null,
              "location": {
                "line": 36,
                "column": 39,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 36,
                "column": 40,
                "length": 1
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `args`. You can omit all the arguments if you don't care about them.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 36,
                "column": 41,
                "length": 4
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/client/file_imports.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Redundant curly braces around a hash parameter.",
              "cop_name": "Style/BracesAroundHashParameters",
              "corrected": null,
              "location": {
                "line": 10,
                "column": 31,
                "length": 168
              }
            },
            {
              "severity": "convention",
              "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
              "cop_name": "Style/IndentHash",
              "corrected": null,
              "location": {
                "line": 11,
                "column": 11,
                "length": 38
              }
            },
            {
              "severity": "convention",
              "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
              "cop_name": "Style/IndentHash",
              "corrected": null,
              "location": {
                "line": 14,
                "column": 11,
                "length": 1
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/client/locales.rb",
          "offenses": []
        },
        {
          "path": "lib/phrase-droid/client/request.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Extra empty line detected at body beginning.",
              "cop_name": "Style/EmptyLinesAroundBody",
              "corrected": null,
              "location": {
                "line": 4,
                "column": 1,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
              "cop_name": "Style/IfUnlessModifier",
              "corrected": null,
              "location": {
                "line": 13,
                "column": 9,
                "length": 6
              }
            },
            {
              "severity": "convention",
              "message": "Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
              "cop_name": "Style/IfUnlessModifier",
              "corrected": null,
              "location": {
                "line": 23,
                "column": 9,
                "length": 6
              }
            },
            {
              "severity": "convention",
              "message": "Provide an exception class and message as arguments to `raise`.",
              "cop_name": "Style/RaiseArgs",
              "corrected": null,
              "location": {
                "line": 31,
                "column": 9,
                "length": 74
              }
            },
            {
              "severity": "convention",
              "message": "Use `fail` instead of `raise` to signal exceptions.",
              "cop_name": "Style/SignalException",
              "corrected": null,
              "location": {
                "line": 31,
                "column": 9,
                "length": 5
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 40,
                "column": 24,
                "length": 1
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/client/translations.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Redundant curly braces around a hash parameter.",
              "cop_name": "Style/BracesAroundHashParameters",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 43,
                "length": 54
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/client.rb",
          "offenses": []
        },
        {
          "path": "lib/phrase-droid/configuration.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
              "cop_name": "Style/GuardClause",
              "corrected": null,
              "location": {
                "line": 17,
                "column": 7,
                "length": 6
              }
            },
            {
              "severity": "convention",
              "message": "Use `fail` instead of `raise` to signal exceptions.",
              "cop_name": "Style/SignalException",
              "corrected": null,
              "location": {
                "line": 18,
                "column": 9,
                "length": 5
              }
            },
            {
              "severity": "convention",
              "message": "Replace class var @@configuration with a class instance var.",
              "cop_name": "Style/ClassVars",
              "corrected": null,
              "location": {
                "line": 44,
                "column": 7,
                "length": 15
              }
            },
            {
              "severity": "warning",
              "message": "`File.exists?` is deprecated in favor of `File.exist?`.",
              "cop_name": "Lint/DeprecatedClassMethods",
              "corrected": null,
              "location": {
                "line": 51,
                "column": 12,
                "length": 7
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/serializer.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
              "cop_name": "Style/IfUnlessModifier",
              "corrected": null,
              "location": {
                "line": 12,
                "column": 7,
                "length": 6
              }
            },
            {
              "severity": "convention",
              "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
              "cop_name": "Style/GuardClause",
              "corrected": null,
              "location": {
                "line": 33,
                "column": 7,
                "length": 6
              }
            },
            {
              "severity": "warning",
              "message": "`Dir.exists?` is deprecated in favor of `Dir.exist?`.",
              "cop_name": "Lint/DeprecatedClassMethods",
              "corrected": null,
              "location": {
                "line": 33,
                "column": 18,
                "length": 7
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 50,
                "column": 35,
                "length": 8
              }
            }
          ]
        },
        {
          "path": "lib/phrase-droid/version.rb",
          "offenses": []
        },
        {
          "path": "lib/phrase-droid.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Use snake_case for source file names.",
              "cop_name": "Style/FileName",
              "corrected": null,
              "location": {
                "line": 1,
                "column": 1,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 20,
                "column": 12,
                "length": 19
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 31,
                "column": 12,
                "length": 19
              }
            },
            {
              "severity": "convention",
              "message": "Replace class var @@client with a class instance var.",
              "cop_name": "Style/ClassVars",
              "corrected": null,
              "location": {
                "line": 44,
                "column": 7,
                "length": 8
              }
            },
            {
              "severity": "convention",
              "message": "Replace class var @@serializer with a class instance var.",
              "cop_name": "Style/ClassVars",
              "corrected": null,
              "location": {
                "line": 48,
                "column": 7,
                "length": 12
              }
            }
          ]
        },
        {
          "path": "phrase-droid.gemspec",
          "offenses": [
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 2,
                "column": 42,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 2,
                "column": 48,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 2,
                "column": 63,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 12,
                "column": 34,
                "length": 3
              }
            }
          ]
        },
        {
          "path": "Rakefile",
          "offenses": [
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 8,
                "column": 13,
                "length": 13
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 25,
                "length": 13
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 38,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 39,
                "length": 13
              }
            },
            {
              "severity": "convention",
              "message": "Space missing after comma.",
              "cop_name": "Style/SpaceAfterComma",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 52,
                "length": 1
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 9,
                "column": 53,
                "length": 10
              }
            },
            {
              "severity": "warning",
              "message": "The use of `eval` is a serious security risk.",
              "cop_name": "Lint/Eval",
              "corrected": null,
              "location": {
                "line": 13,
                "column": 8,
                "length": 4
              }
            },
            {
              "severity": "warning",
              "message": "Unused block argument - `pkg`. You can omit the argument if you don't care about it.",
              "cop_name": "Lint/UnusedBlockArgument",
              "corrected": null,
              "location": {
                "line": 15,
                "column": 32,
                "length": 3
              }
            },
            {
              "severity": "convention",
              "message": "Use the new Ruby 1.9 hash syntax.",
              "cop_name": "Style/HashSyntax",
              "corrected": null,
              "location": {
                "line": 19,
                "column": 6,
                "length": 11
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 21,
                "column": 6,
                "length": 11
              }
            },
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 23,
                "column": 15,
                "length": 18
              }
            }
          ]
        },
        {
          "path": "spec/lib/client/file_imports_spec.rb",
          "offenses": []
        },
        {
          "path": "spec/lib/client/locales_spec.rb",
          "offenses": []
        },
        {
          "path": "spec/lib/client/translations_spec.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Redundant curly braces around a hash parameter.",
              "cop_name": "Style/BracesAroundHashParameters",
              "corrected": null,
              "location": {
                "line": 5,
                "column": 68,
                "length": 69
              }
            },
            {
              "severity": "convention",
              "message": "Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.",
              "cop_name": "Style/IndentHash",
              "corrected": null,
              "location": {
                "line": 6,
                "column": 7,
                "length": 29
              }
            },
            {
              "severity": "convention",
              "message": "Indent the right brace the same as the first position after the preceding left parenthesis.",
              "cop_name": "Style/IndentHash",
              "corrected": null,
              "location": {
                "line": 8,
                "column": 7,
                "length": 1
              }
            }
          ]
        },
        {
          "path": "spec/lib/serializer_spec.rb",
          "offenses": [
            {
              "severity": "warning",
              "message": "`(...)` interpreted as grouped expression.",
              "cop_name": "Lint/ParenthesesAsGroupedExpression",
              "corrected": null,
              "location": {
                "line": 4,
                "column": 6,
                "length": 1
              }
            }
          ]
        },
        {
          "path": "spec/spec_helper.rb",
          "offenses": [
            {
              "severity": "convention",
              "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
              "cop_name": "Style/StringLiterals",
              "corrected": null,
              "location": {
                "line": 1,
                "column": 9,
                "length": 20
              }
            },
            {
              "severity": "convention",
              "message": "Use 2 (not 4) spaces for indentation.",
              "cop_name": "Style/IndentationWidth",
              "corrected": null,
              "location": {
                "line": 7,
                "column": 1,
                "length": 4
              }
            },
            {
              "severity": "convention",
              "message": "Space missing inside }.",
              "cop_name": "Style/SpaceInsideBlockBraces",
              "corrected": null,
              "location": {
                "line": 38,
                "column": 46,
                "length": 1
              }
            }
          ]
        }
      ],
      "summary": {
        "offense_count": 56,
        "target_file_count": 17,
        "inspected_file_count": 17
      }
    }
